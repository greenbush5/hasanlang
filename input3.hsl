var a = 2 + 2 * 2;

var b = some_func() + 2 / 2 * (12312312);

var c = other_func()()()()()() + 1337 * 323289.2 - 1;

var d = array[0][1][2][3][4][5] - 1 + another_function();

var e = array[0]("hello, world!" + "!")("asd")[4 - 2];

var f = some_class->some_property + some_class->some_function();

var e = something.something_else / something.something_more();

var f = something->2(); // I'm not sure whether to allow this or not

type SomeType<T> = T[];

// Single-line comments work // dfgjhdfgjdfhgj

/*
Multi-line comments work too
*/

func world() -> str do
	return "hello";
end

class ClassDefinition
	a: int[][] = "default value";
	b: SomeType<int>[];

	#[static, constructor]
	func some_function() -> bool do

	end;

	c: bool;

	func another_function() -> int do

	end
end;

declare class ClassDeclaraction
	a: int;

	#[static, constructor]
	func some_function() -> bool;

	func other_function() -> int;
end

declare class Array<T>
	#[get]
	func length() -> int;

	func append(_elem: T) -> void;
	func copy() -> this;
end

func hello() -> SomeType<int> do
	function_call_statement(123);
	asdasd.world(123, ["hello", "world!"]);

	var arr = Array();

	var var1 = some_random_variable;

	var var2 = 2 + 5;
	var complex_expression = (var2 * 1.5) / 3 + a[0].function(1, 2, 3, "random string", []) * a[0][1]->static1->static1.func1(123123123 * 2, []) + 2;

	return [complex_expression, var2];
end;