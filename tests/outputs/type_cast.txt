[
    FunctionDefinition {
        modifiers: GeneralModifiers {
            modifiers: [],
            span: Span {
                str: "",
                start: 0,
                end: 0,
            },
        },
        name: Span {
            str: "cast",
            start: 5,
            end: 9,
        },
        generics: [
            Identifier(
                Span {
                    str: "From",
                    start: 10,
                    end: 14,
                },
            ),
            Identifier(
                Span {
                    str: "To",
                    start: 16,
                    end: 18,
                },
            ),
        ],
        arguments: [
            FunctionArgument {
                name: Identifier(
                    Span {
                        str: "input",
                        start: 20,
                        end: 25,
                    },
                ),
                kind: Regular {
                    base: Identifier(
                        Span {
                            str: "From",
                            start: 27,
                            end: 31,
                        },
                    ),
                    generics: [],
                    raw: false,
                    array: false,
                    span: Span {
                        str: "From",
                        start: 27,
                        end: 31,
                    },
                },
                span: Span {
                    str: "input: From",
                    start: 20,
                    end: 31,
                },
            },
        ],
        return_type: Some(
            Regular {
                base: Identifier(
                    Span {
                        str: "To",
                        start: 36,
                        end: 38,
                    },
                ),
                generics: [],
                raw: false,
                array: false,
                span: Span {
                    str: "To ",
                    start: 36,
                    end: 39,
                },
            },
        ),
        statements: [
            Return {
                value: TypeCast {
                    value: Identifier(
                        Span {
                            str: "input",
                            start: 50,
                            end: 55,
                        },
                    ),
                    kind: Regular {
                        base: Identifier(
                            Span {
                                str: "To",
                                start: 59,
                                end: 61,
                            },
                        ),
                        generics: [],
                        raw: false,
                        array: false,
                        span: Span {
                            str: "To",
                            start: 59,
                            end: 61,
                        },
                    },
                    span: Span {
                        str: "as To",
                        start: 56,
                        end: 61,
                    },
                },
                span: Span {
                    str: "return input as To;",
                    start: 43,
                    end: 62,
                },
            },
        ],
        span: Span {
            str: "func cast<From, To>(input: From) -> To do\n\treturn input as To;\nend\n\n",
            start: 0,
            end: 68,
        },
    },
    VariableDefinition {
        modifiers: GeneralModifiers {
            modifiers: [],
            span: Span {
                str: "",
                start: 68,
                end: 68,
            },
        },
        name: Span {
            str: "long_cast",
            start: 72,
            end: 81,
        },
        kind: None,
        value: TypeCast {
            value: TypeCast {
                value: TypeCast {
                    value: TypeCast {
                        value: TypeCast {
                            value: TypeCast {
                                value: TypeCast {
                                    value: Int(
                                        3,
                                        Span {
                                            str: "3",
                                            start: 84,
                                            end: 85,
                                        },
                                    ),
                                    kind: Regular {
                                        base: Identifier(
                                            Span {
                                                str: "a",
                                                start: 89,
                                                end: 90,
                                            },
                                        ),
                                        generics: [],
                                        raw: false,
                                        array: false,
                                        span: Span {
                                            str: "a ",
                                            start: 89,
                                            end: 91,
                                        },
                                    },
                                    span: Span {
                                        str: "as a ",
                                        start: 86,
                                        end: 91,
                                    },
                                },
                                kind: Regular {
                                    base: Identifier(
                                        Span {
                                            str: "b",
                                            start: 94,
                                            end: 95,
                                        },
                                    ),
                                    generics: [],
                                    raw: false,
                                    array: false,
                                    span: Span {
                                        str: "b ",
                                        start: 94,
                                        end: 96,
                                    },
                                },
                                span: Span {
                                    str: "as b ",
                                    start: 91,
                                    end: 96,
                                },
                            },
                            kind: Regular {
                                base: Identifier(
                                    Span {
                                        str: "c",
                                        start: 99,
                                        end: 100,
                                    },
                                ),
                                generics: [],
                                raw: false,
                                array: false,
                                span: Span {
                                    str: "c ",
                                    start: 99,
                                    end: 101,
                                },
                            },
                            span: Span {
                                str: "as c ",
                                start: 96,
                                end: 101,
                            },
                        },
                        kind: Regular {
                            base: Identifier(
                                Span {
                                    str: "d",
                                    start: 104,
                                    end: 105,
                                },
                            ),
                            generics: [],
                            raw: false,
                            array: false,
                            span: Span {
                                str: "d ",
                                start: 104,
                                end: 106,
                            },
                        },
                        span: Span {
                            str: "as d ",
                            start: 101,
                            end: 106,
                        },
                    },
                    kind: Regular {
                        base: Identifier(
                            Span {
                                str: "e",
                                start: 109,
                                end: 110,
                            },
                        ),
                        generics: [],
                        raw: false,
                        array: false,
                        span: Span {
                            str: "e ",
                            start: 109,
                            end: 111,
                        },
                    },
                    span: Span {
                        str: "as e ",
                        start: 106,
                        end: 111,
                    },
                },
                kind: Regular {
                    base: Identifier(
                        Span {
                            str: "f",
                            start: 114,
                            end: 115,
                        },
                    ),
                    generics: [],
                    raw: false,
                    array: false,
                    span: Span {
                        str: "f ",
                        start: 114,
                        end: 116,
                    },
                },
                span: Span {
                    str: "as f ",
                    start: 111,
                    end: 116,
                },
            },
            kind: Regular {
                base: Identifier(
                    Span {
                        str: "g",
                        start: 119,
                        end: 120,
                    },
                ),
                generics: [],
                raw: false,
                array: false,
                span: Span {
                    str: "g",
                    start: 119,
                    end: 120,
                },
            },
            span: Span {
                str: "as g",
                start: 116,
                end: 120,
            },
        },
        span: Span {
            str: "var long_cast = 3 as a as b as c as d as e as f as g;",
            start: 68,
            end: 121,
        },
    },
    Return {
        value: FunctionCall {
            callee: Identifier(
                Span {
                    str: "cast",
                    start: 130,
                    end: 134,
                },
            ),
            generics: [
                Regular {
                    base: Identifier(
                        Span {
                            str: "int",
                            start: 135,
                            end: 138,
                        },
                    ),
                    generics: [],
                    raw: false,
                    array: false,
                    span: Span {
                        str: "int",
                        start: 135,
                        end: 138,
                    },
                },
                Regular {
                    base: Identifier(
                        Span {
                            str: "float",
                            start: 140,
                            end: 145,
                        },
                    ),
                    generics: [],
                    raw: false,
                    array: false,
                    span: Span {
                        str: "float",
                        start: 140,
                        end: 145,
                    },
                },
            ],
            arguments: [
                Int(
                    5,
                    Span {
                        str: "5",
                        start: 147,
                        end: 148,
                    },
                ),
            ],
            span: Span {
                str: "<int, float>(5)",
                start: 134,
                end: 149,
            },
        },
        span: Span {
            str: "return cast<int, float>(5);",
            start: 123,
            end: 150,
        },
    },
]