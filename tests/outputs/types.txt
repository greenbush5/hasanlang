Program {
    statements: [
        TypeAlias {
            modifiers: [],
            name: "AType",
            generics: [
                Identifier(
                    "Generic1",
                ),
                Identifier(
                    "Generic2",
                ),
            ],
            definition: Regular {
                base: Identifier(
                    "Generic1",
                ),
                generics: [
                    Identifier(
                        "Generic2",
                    ),
                ],
                raw: false,
                array: true,
            },
        },
        TypeAlias {
            modifiers: [],
            name: "Reg_T",
            generics: [],
            definition: Regular {
                base: Identifier(
                    "int",
                ),
                generics: [],
                raw: false,
                array: false,
            },
        },
        TypeAlias {
            modifiers: [],
            name: "Reg_ArrayT",
            generics: [],
            definition: Regular {
                base: Identifier(
                    "int",
                ),
                generics: [],
                raw: false,
                array: true,
            },
        },
        TypeAlias {
            modifiers: [],
            name: "Reg_GenericT",
            generics: [
                Identifier(
                    "A",
                ),
            ],
            definition: Regular {
                base: Identifier(
                    "A",
                ),
                generics: [
                    Identifier(
                        "A",
                    ),
                ],
                raw: false,
                array: true,
            },
        },
        TypeAlias {
            modifiers: [],
            name: "Reg_GenericArrayT",
            generics: [
                Identifier(
                    "B",
                ),
            ],
            definition: Regular {
                base: Identifier(
                    "B",
                ),
                generics: [
                    Identifier(
                        "B",
                    ),
                ],
                raw: false,
                array: true,
            },
        },
        TypeAlias {
            modifiers: [],
            name: "Raw_T",
            generics: [],
            definition: Regular {
                base: Identifier(
                    "int",
                ),
                generics: [],
                raw: true,
                array: false,
            },
        },
        TypeAlias {
            modifiers: [],
            name: "Raw_ArrayT",
            generics: [],
            definition: Regular {
                base: Identifier(
                    "int",
                ),
                generics: [],
                raw: true,
                array: true,
            },
        },
        TypeAlias {
            modifiers: [],
            name: "Raw_GenericT",
            generics: [
                Identifier(
                    "A",
                ),
            ],
            definition: Regular {
                base: Identifier(
                    "A",
                ),
                generics: [
                    Identifier(
                        "A",
                    ),
                ],
                raw: true,
                array: true,
            },
        },
        TypeAlias {
            modifiers: [],
            name: "Raw_GenericArrayT",
            generics: [
                Identifier(
                    "B",
                ),
            ],
            definition: Regular {
                base: Identifier(
                    "B",
                ),
                generics: [
                    Identifier(
                        "B",
                    ),
                ],
                raw: true,
                array: true,
            },
        },
        FunctionDefinition {
            modifiers: [],
            name: "_",
            generics: [
                Identifier(
                    "Generic2",
                ),
            ],
            arguments: [],
            return_type: Some(
                Regular {
                    base: Identifier(
                        "AType",
                    ),
                    generics: [
                        Identifier(
                            "int",
                        ),
                        Identifier(
                            "Generic2",
                        ),
                    ],
                    raw: false,
                    array: true,
                },
            ),
            statements: [
                Return(
                    Array(
                        [
                            Int(
                                5,
                            ),
                        ],
                    ),
                ),
            ],
        },
        FunctionDefinition {
            modifiers: [],
            name: "cast",
            generics: [
                Identifier(
                    "From",
                ),
                Identifier(
                    "To",
                ),
            ],
            arguments: [
                FunctionArgument {
                    name: "input",
                    kind: Regular {
                        base: Identifier(
                            "From",
                        ),
                        generics: [],
                        raw: false,
                        array: false,
                    },
                },
            ],
            return_type: Some(
                Regular {
                    base: Identifier(
                        "To",
                    ),
                    generics: [],
                    raw: false,
                    array: false,
                },
            ),
            statements: [
                Return(
                    TypeCast {
                        value: Identifier(
                            "input",
                        ),
                        kind: Regular {
                            base: Identifier(
                                "To",
                            ),
                            generics: [],
                            raw: false,
                            array: false,
                        },
                    },
                ),
            ],
        },
        VariableDefinition {
            modifiers: [],
            name: "long_cast",
            kind: None,
            value: TypeCast {
                value: TypeCast {
                    value: TypeCast {
                        value: TypeCast {
                            value: TypeCast {
                                value: TypeCast {
                                    value: TypeCast {
                                        value: Int(
                                            3,
                                        ),
                                        kind: Regular {
                                            base: Identifier(
                                                "a",
                                            ),
                                            generics: [],
                                            raw: false,
                                            array: false,
                                        },
                                    },
                                    kind: Regular {
                                        base: Identifier(
                                            "b",
                                        ),
                                        generics: [],
                                        raw: false,
                                        array: false,
                                    },
                                },
                                kind: Regular {
                                    base: Identifier(
                                        "c",
                                    ),
                                    generics: [],
                                    raw: false,
                                    array: false,
                                },
                            },
                            kind: Regular {
                                base: Identifier(
                                    "d",
                                ),
                                generics: [],
                                raw: false,
                                array: false,
                            },
                        },
                        kind: Regular {
                            base: Identifier(
                                "e",
                            ),
                            generics: [],
                            raw: false,
                            array: false,
                        },
                    },
                    kind: Regular {
                        base: Identifier(
                            "f",
                        ),
                        generics: [],
                        raw: false,
                        array: false,
                    },
                },
                kind: Regular {
                    base: Identifier(
                        "g",
                    ),
                    generics: [],
                    raw: false,
                    array: false,
                },
            },
        },
        Return(
            FunctionCall {
                callee: Identifier(
                    "cast",
                ),
                generics: [
                    Regular {
                        base: Identifier(
                            "int",
                        ),
                        generics: [],
                        raw: false,
                        array: false,
                    },
                    Regular {
                        base: Identifier(
                            "float",
                        ),
                        generics: [],
                        raw: false,
                        array: false,
                    },
                ],
                arguments: [
                    Int(
                        5,
                    ),
                ],
            },
        ),
    ],
    module_info: None,
}