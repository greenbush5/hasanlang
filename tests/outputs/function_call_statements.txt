[
    VariableAssign {
        name: Identifier(
            Span {
                str: "a",
                start: 0,
                end: 1,
            },
        ),
        value: Number(
            5,
            Span {
                str: "5",
                start: 4,
                end: 5,
            },
        ),
        span: Span {
            str: "a = 5;",
            start: 0,
            end: 6,
        },
    },
    VariableAssign {
        name: DotAccess {
            expression: DotAccess {
                expression: Identifier(
                    Span {
                        str: "a",
                        start: 8,
                        end: 9,
                    },
                ),
                accessor: Identifier(
                    Span {
                        str: "b",
                        start: 10,
                        end: 11,
                    },
                ),
                span: Span {
                    str: ".b",
                    start: 9,
                    end: 11,
                },
            },
            accessor: Identifier(
                Span {
                    str: "c",
                    start: 12,
                    end: 13,
                },
            ),
            span: Span {
                str: ".c",
                start: 11,
                end: 13,
            },
        },
        value: Number(
            3,
            Span {
                str: "3",
                start: 16,
                end: 17,
            },
        ),
        span: Span {
            str: "a.b.c = 3;",
            start: 8,
            end: 18,
        },
    },
    VariableAssign {
        name: ArrowAccess {
            expression: DotAccess {
                expression: FunctionCall {
                    callee: DotAccess {
                        expression: Identifier(
                            Span {
                                str: "a",
                                start: 20,
                                end: 21,
                            },
                        ),
                        accessor: Identifier(
                            Span {
                                str: "b",
                                start: 22,
                                end: 23,
                            },
                        ),
                        span: Span {
                            str: ".b",
                            start: 21,
                            end: 23,
                        },
                    },
                    generics: [],
                    arguments: [],
                    span: Span {
                        str: "()",
                        start: 23,
                        end: 25,
                    },
                },
                accessor: Identifier(
                    Span {
                        str: "d",
                        start: 26,
                        end: 27,
                    },
                ),
                span: Span {
                    str: ".d",
                    start: 25,
                    end: 27,
                },
            },
            accessor: Identifier(
                Span {
                    str: "e",
                    start: 29,
                    end: 30,
                },
            ),
            span: Span {
                str: "->e",
                start: 27,
                end: 30,
            },
        },
        value: FunctionCall {
            callee: ArrayAccess {
                expression: FunctionCall {
                    callee: ArrayAccess {
                        expression: DotAccess {
                            expression: FunctionCall {
                                callee: FunctionCall {
                                    callee: Identifier(
                                        Span {
                                            str: "f",
                                            start: 33,
                                            end: 34,
                                        },
                                    ),
                                    generics: [],
                                    arguments: [],
                                    span: Span {
                                        str: "()",
                                        start: 34,
                                        end: 36,
                                    },
                                },
                                generics: [],
                                arguments: [],
                                span: Span {
                                    str: "()",
                                    start: 36,
                                    end: 38,
                                },
                            },
                            accessor: Identifier(
                                Span {
                                    str: "g",
                                    start: 39,
                                    end: 40,
                                },
                            ),
                            span: Span {
                                str: ".g",
                                start: 38,
                                end: 40,
                            },
                        },
                        accessor: Identifier(
                            Span {
                                str: "h",
                                start: 41,
                                end: 42,
                            },
                        ),
                        span: Span {
                            str: "[h]",
                            start: 40,
                            end: 43,
                        },
                    },
                    generics: [],
                    arguments: [],
                    span: Span {
                        str: "()",
                        start: 43,
                        end: 45,
                    },
                },
                accessor: Identifier(
                    Span {
                        str: "i",
                        start: 46,
                        end: 47,
                    },
                ),
                span: Span {
                    str: "[i]",
                    start: 45,
                    end: 48,
                },
            },
            generics: [],
            arguments: [],
            span: Span {
                str: "()",
                start: 48,
                end: 50,
            },
        },
        span: Span {
            str: "a.b().d->e = f()().g[h]()[i]();",
            start: 20,
            end: 51,
        },
    },
    FunctionCall {
        callee: Identifier(
            Span {
                str: "a",
                start: 55,
                end: 56,
            },
        ),
        generics: [],
        arguments: [],
        span: Span {
            str: "()",
            start: 56,
            end: 58,
        },
    },
    FunctionCall {
        callee: FunctionCall {
            callee: Identifier(
                Span {
                    str: "a",
                    start: 61,
                    end: 62,
                },
            ),
            generics: [
                Type {
                    base: Identifier(
                        Span {
                            str: "B",
                            start: 63,
                            end: 64,
                        },
                    ),
                    generics: [],
                    array: true,
                    raw: true,
                    span: Span {
                        str: "B[]!",
                        start: 63,
                        end: 67,
                    },
                },
            ],
            arguments: [
                String(
                    "asd",
                    Span {
                        str: "\"asd\"",
                        start: 69,
                        end: 74,
                    },
                ),
            ],
            span: Span {
                str: "<B[]!>(\"asd\")",
                start: 62,
                end: 75,
            },
        },
        generics: [
            Type {
                base: Identifier(
                    Span {
                        str: "A",
                        start: 76,
                        end: 77,
                    },
                ),
                generics: [],
                array: false,
                raw: false,
                span: Span {
                    str: "A",
                    start: 76,
                    end: 77,
                },
            },
        ],
        arguments: [
            Number(
                1,
                Span {
                    str: "1",
                    start: 79,
                    end: 80,
                },
            ),
        ],
        span: Span {
            str: "<A>(1)",
            start: 75,
            end: 81,
        },
    },
]