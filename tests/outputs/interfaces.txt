Program {
    statements: [
        Interface {
            modifiers: [
                Public,
                Constant,
                Static,
            ],
            name: "ComplexInterface",
            generics: [
                DefinitionType {
                    name: "A",
                    requires_implementations: [],
                },
                DefinitionType {
                    name: "B",
                    requires_implementations: [],
                },
                DefinitionType {
                    name: "C",
                    requires_implementations: [],
                },
            ],
            members: [
                Variable {
                    modifiers: [
                        Static,
                    ],
                    name: "hello",
                    kind: Regular {
                        base: Identifier(
                            "string",
                        ),
                        generics: [],
                        raw: false,
                        array: true,
                    },
                },
                Variable {
                    modifiers: [],
                    name: "reg_var",
                    kind: Regular {
                        base: Identifier(
                            "int",
                        ),
                        generics: [],
                        raw: true,
                        array: false,
                    },
                },
                Function {
                    attributes: Some(
                        [
                            Constructor,
                        ],
                    ),
                    modifiers: [
                        Public,
                    ],
                    name: "world",
                    generics: [
                        DefinitionType {
                            name: "T",
                            requires_implementations: [],
                        },
                    ],
                    argument_types: [
                        Regular {
                            base: Identifier(
                                "int",
                            ),
                            generics: [],
                            raw: false,
                            array: false,
                        },
                        Regular {
                            base: Identifier(
                                "int",
                            ),
                            generics: [],
                            raw: false,
                            array: false,
                        },
                    ],
                    return_type: Regular {
                        base: Identifier(
                            "int",
                        ),
                        generics: [],
                        raw: false,
                        array: false,
                    },
                },
                Function {
                    attributes: None,
                    modifiers: [],
                    name: "bye",
                    generics: [
                        DefinitionType {
                            name: "A",
                            requires_implementations: [],
                        },
                    ],
                    argument_types: [],
                    return_type: Regular {
                        base: Identifier(
                            "B",
                        ),
                        generics: [],
                        raw: true,
                        array: true,
                    },
                },
                Function {
                    attributes: None,
                    modifiers: [],
                    name: "test",
                    generics: [],
                    argument_types: [],
                    return_type: Function {
                        generics: [],
                        argument_types: [
                            Regular {
                                base: Identifier(
                                    "int",
                                ),
                                generics: [],
                                raw: false,
                                array: false,
                            },
                            Regular {
                                base: Identifier(
                                    "int",
                                ),
                                generics: [],
                                raw: false,
                                array: false,
                            },
                        ],
                        return_type: Function {
                            generics: [],
                            argument_types: [
                                Regular {
                                    base: Identifier(
                                        "int",
                                    ),
                                    generics: [],
                                    raw: false,
                                    array: false,
                                },
                                Regular {
                                    base: Identifier(
                                        "C",
                                    ),
                                    generics: [],
                                    raw: false,
                                    array: false,
                                },
                            ],
                            return_type: Regular {
                                base: Identifier(
                                    "void",
                                ),
                                generics: [],
                                raw: true,
                                array: false,
                            },
                        },
                    },
                },
            ],
        },
        Interface {
            modifiers: [],
            name: "SimpleInterface",
            generics: [],
            members: [
                Variable {
                    modifiers: [],
                    name: "some_variable",
                    kind: Regular {
                        base: Identifier(
                            "int",
                        ),
                        generics: [],
                        raw: false,
                        array: false,
                    },
                },
                Function {
                    attributes: None,
                    modifiers: [],
                    name: "some_function",
                    generics: [],
                    argument_types: [],
                    return_type: Regular {
                        base: Identifier(
                            "void",
                        ),
                        generics: [],
                        raw: false,
                        array: false,
                    },
                },
            ],
        },
        ClassDefinition {
            modifiers: [],
            name: "ExampleClass",
            generics: [],
            members: [],
        },
        Interface {
            modifiers: [],
            name: "ExampleInterface",
            generics: [
                DefinitionType {
                    name: "T",
                    requires_implementations: [],
                },
            ],
            members: [
                Variable {
                    modifiers: [],
                    name: "hello",
                    kind: Regular {
                        base: Identifier(
                            "T",
                        ),
                        generics: [],
                        raw: false,
                        array: false,
                    },
                },
                Function {
                    attributes: None,
                    modifiers: [],
                    name: "function",
                    generics: [],
                    argument_types: [],
                    return_type: Regular {
                        base: Identifier(
                            "int",
                        ),
                        generics: [],
                        raw: false,
                        array: false,
                    },
                },
            ],
        },
        InterfaceImpl {
            interface_name: "ExampleInterface",
            generics: [
                DefinitionType {
                    name: "world",
                    requires_implementations: [],
                },
            ],
            class_name: "ExampleClass",
            members: [
                Variable {
                    modifiers: [],
                    name: "hello",
                    kind: Regular {
                        base: Identifier(
                            "world",
                        ),
                        generics: [],
                        raw: false,
                        array: false,
                    },
                    default_value: Empty,
                },
                Function {
                    attributes: None,
                    modifiers: [],
                    name: "function",
                    generics: [],
                    arguments: [],
                    return_type: Some(
                        Regular {
                            base: Identifier(
                                "int",
                            ),
                            generics: [],
                            raw: false,
                            array: false,
                        },
                    ),
                    statements: [
                        Return(
                            Int(
                                5,
                            ),
                        ),
                    ],
                },
            ],
        },
        Interface {
            modifiers: [],
            name: "Callable",
            generics: [],
            members: [
                Function {
                    attributes: None,
                    modifiers: [
                        Public,
                    ],
                    name: "call",
                    generics: [],
                    argument_types: [],
                    return_type: Regular {
                        base: Identifier(
                            "void",
                        ),
                        generics: [],
                        raw: false,
                        array: false,
                    },
                },
            ],
        },
        FunctionDefinition {
            modifiers: [],
            name: "call_anything",
            generics: [
                DefinitionType {
                    name: "T",
                    requires_implementations: [
                        "Callable",
                    ],
                },
            ],
            arguments: [
                FunctionArgument {
                    name: "something",
                    kind: Regular {
                        base: Identifier(
                            "T",
                        ),
                        generics: [],
                        raw: false,
                        array: false,
                    },
                },
            ],
            return_type: Some(
                Regular {
                    base: Identifier(
                        "void",
                    ),
                    generics: [],
                    raw: false,
                    array: false,
                },
            ),
            statements: [
                FunctionCall {
                    callee: DotAccess {
                        expression: Identifier(
                            "something",
                        ),
                        accessor: Identifier(
                            "call",
                        ),
                    },
                    generics: [],
                    arguments: [],
                },
            ],
        },
    ],
    module_info: None,
}