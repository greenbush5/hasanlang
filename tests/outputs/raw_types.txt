[
    TypeDefinition {
        name: Span {
            str: "Reg_T",
            start: 5,
            end: 10,
        },
        generics: [],
        definition: Type {
            base: Identifier(
                Span {
                    str: "int",
                    start: 13,
                    end: 16,
                },
            ),
            generics: [],
            array: false,
            raw: false,
            span: Span {
                str: "int",
                start: 13,
                end: 16,
            },
        },
        span: Span {
            str: "type Reg_T = int;",
            start: 0,
            end: 17,
        },
    },
    TypeDefinition {
        name: Span {
            str: "Reg_ArrayT",
            start: 23,
            end: 33,
        },
        generics: [],
        definition: Type {
            base: Identifier(
                Span {
                    str: "int",
                    start: 36,
                    end: 39,
                },
            ),
            generics: [],
            array: true,
            raw: false,
            span: Span {
                str: "int[]",
                start: 36,
                end: 41,
            },
        },
        span: Span {
            str: "type Reg_ArrayT = int[];",
            start: 18,
            end: 42,
        },
    },
    TypeDefinition {
        name: Span {
            str: "Reg_GenericT",
            start: 48,
            end: 60,
        },
        generics: [
            Identifier(
                Span {
                    str: "A",
                    start: 61,
                    end: 62,
                },
            ),
        ],
        definition: Type {
            base: Identifier(
                Span {
                    str: "A",
                    start: 66,
                    end: 67,
                },
            ),
            generics: [
                Identifier(
                    Span {
                        str: "A",
                        start: 68,
                        end: 69,
                    },
                ),
            ],
            array: false,
            raw: false,
            span: Span {
                str: "A<A>",
                start: 66,
                end: 70,
            },
        },
        span: Span {
            str: "type Reg_GenericT<A> = A<A>;",
            start: 43,
            end: 71,
        },
    },
    TypeDefinition {
        name: Span {
            str: "Reg_GenericArrayT",
            start: 77,
            end: 94,
        },
        generics: [
            Identifier(
                Span {
                    str: "B",
                    start: 95,
                    end: 96,
                },
            ),
        ],
        definition: Type {
            base: Identifier(
                Span {
                    str: "B",
                    start: 100,
                    end: 101,
                },
            ),
            generics: [
                Identifier(
                    Span {
                        str: "B",
                        start: 102,
                        end: 103,
                    },
                ),
            ],
            array: true,
            raw: false,
            span: Span {
                str: "B<B>[]",
                start: 100,
                end: 106,
            },
        },
        span: Span {
            str: "type Reg_GenericArrayT<B> = B<B>[];",
            start: 72,
            end: 107,
        },
    },
    TypeDefinition {
        name: Span {
            str: "Raw_T",
            start: 114,
            end: 119,
        },
        generics: [],
        definition: Type {
            base: Identifier(
                Span {
                    str: "int",
                    start: 122,
                    end: 125,
                },
            ),
            generics: [],
            array: false,
            raw: true,
            span: Span {
                str: "int!",
                start: 122,
                end: 126,
            },
        },
        span: Span {
            str: "type Raw_T = int!;",
            start: 109,
            end: 127,
        },
    },
    TypeDefinition {
        name: Span {
            str: "Raw_ArrayT",
            start: 133,
            end: 143,
        },
        generics: [],
        definition: Type {
            base: Identifier(
                Span {
                    str: "int",
                    start: 146,
                    end: 149,
                },
            ),
            generics: [],
            array: true,
            raw: true,
            span: Span {
                str: "int[]!",
                start: 146,
                end: 152,
            },
        },
        span: Span {
            str: "type Raw_ArrayT = int[]!;",
            start: 128,
            end: 153,
        },
    },
    TypeDefinition {
        name: Span {
            str: "Raw_GenericT",
            start: 159,
            end: 171,
        },
        generics: [
            Identifier(
                Span {
                    str: "A",
                    start: 172,
                    end: 173,
                },
            ),
        ],
        definition: Type {
            base: Identifier(
                Span {
                    str: "A",
                    start: 177,
                    end: 178,
                },
            ),
            generics: [
                Identifier(
                    Span {
                        str: "A",
                        start: 179,
                        end: 180,
                    },
                ),
            ],
            array: false,
            raw: true,
            span: Span {
                str: "A<A>!",
                start: 177,
                end: 182,
            },
        },
        span: Span {
            str: "type Raw_GenericT<A> = A<A>!;",
            start: 154,
            end: 183,
        },
    },
    TypeDefinition {
        name: Span {
            str: "Raw_GenericArrayT",
            start: 189,
            end: 206,
        },
        generics: [
            Identifier(
                Span {
                    str: "B",
                    start: 207,
                    end: 208,
                },
            ),
        ],
        definition: Type {
            base: Identifier(
                Span {
                    str: "B",
                    start: 212,
                    end: 213,
                },
            ),
            generics: [
                Identifier(
                    Span {
                        str: "B",
                        start: 214,
                        end: 215,
                    },
                ),
            ],
            array: true,
            raw: true,
            span: Span {
                str: "B<B>[]!",
                start: 212,
                end: 219,
            },
        },
        span: Span {
            str: "type Raw_GenericArrayT<B> = B<B>[]!;",
            start: 184,
            end: 220,
        },
    },
]