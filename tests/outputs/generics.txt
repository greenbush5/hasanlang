Program {
    statements: [
        FunctionDefinition {
            modifiers: [],
            name: "generic_function",
            generics: [
                Identifier(
                    "T",
                ),
            ],
            arguments: [
                FunctionArgument {
                    name: "input",
                    kind: Regular {
                        base: Identifier(
                            "T",
                        ),
                        generics: [],
                        raw: false,
                        array: false,
                    },
                },
            ],
            return_type: Some(
                Regular {
                    base: Identifier(
                        "T",
                    ),
                    generics: [],
                    raw: false,
                    array: true,
                },
            ),
            statements: [
                Return(
                    Array(
                        [
                            Identifier(
                                "input",
                            ),
                        ],
                    ),
                ),
            ],
        },
        ClassDefinition {
            modifiers: [],
            name: "generic_class",
            generics: [
                Identifier(
                    "T",
                ),
            ],
            members: [
                Variable {
                    modifiers: [],
                    name: "inner_value",
                    kind: Regular {
                        base: Identifier(
                            "T",
                        ),
                        generics: [],
                        raw: false,
                        array: false,
                    },
                    default_value: Empty,
                },
                Function {
                    modifiers: [],
                    name: "value",
                    attributes: Some(
                        [
                            Get,
                        ],
                    ),
                    generics: [],
                    arguments: [],
                    return_type: Some(
                        Regular {
                            base: Identifier(
                                "T",
                            ),
                            generics: [],
                            raw: false,
                            array: false,
                        },
                    ),
                    statements: [
                        Return(
                            DotAccess {
                                expression: Identifier(
                                    "this",
                                ),
                                accessor: Identifier(
                                    "inner_value",
                                ),
                            },
                        ),
                    ],
                },
            ],
        },
        FunctionDefinition {
            modifiers: [],
            name: "main",
            generics: [],
            arguments: [],
            return_type: None,
            statements: [
                VariableDefinition {
                    modifiers: [],
                    name: "wrapped",
                    kind: None,
                    value: FunctionCall {
                        callee: Identifier(
                            "generic_function",
                        ),
                        generics: [
                            Regular {
                                base: Identifier(
                                    "int",
                                ),
                                generics: [],
                                raw: false,
                                array: false,
                            },
                        ],
                        arguments: [
                            Int(
                                5,
                            ),
                        ],
                    },
                },
            ],
        },
    ],
    module_info: None,
}