pub const static interface ComplexInterface<A, B, C>
	static var hello: string[];
	var reg_var: int!;

	#[constructor]
	pub func world<T>(int, int) -> int;

	func bye<A>() -> B![];

	func test() -> (int, int) -> (int, C) -> void!;
end

interface SimpleInterface
	var some_variable: int;

	func some_function() -> void;
end

// Implementations
class ExampleClass

end

interface ExampleInterface<T>
	var hello: T;

	func function() -> int;
end

impl ExampleInterface<world> for ExampleClass
	hello: world;

	func function() -> int do
		return 5;
	end
end

// Constraints
interface Callable
	pub func call() -> void;
end

func call_anything<T: impl<Callable>>(something: T) -> void do
	something.call();
end